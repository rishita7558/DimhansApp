// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  // NOTE: These are placeholder values for testing. 
  // You need to replace them with your actual Firebase project configuration.
  // To get these values:
  // 1. Go to https://console.firebase.google.com/
  // 2. Create a new project or select existing one
  // 3. Add a web app to your project
  // 4. Copy the configuration values from the Firebase console
  
  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'demo-api-key-for-testing',
    appId: 'demo-app-id-for-testing',
    messagingSenderId: '123456789',
    projectId: 'demo-project-id',
    authDomain: 'demo-project.firebaseapp.com',
    storageBucket: 'demo-project.appspot.com',
    measurementId: 'demo-measurement-id',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'demo-api-key-for-testing',
    appId: 'demo-app-id-for-testing',
    messagingSenderId: '123456789',
    projectId: 'demo-project-id',
    storageBucket: 'demo-project.appspot.com',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'demo-api-key-for-testing',
    appId: 'demo-app-id-for-testing',
    messagingSenderId: '123456789',
    projectId: 'demo-project-id',
    storageBucket: 'demo-project.appspot.com',
    iosClientId: 'demo-ios-client-id',
    iosBundleId: 'com.example.dimhansApp',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'demo-api-key-for-testing',
    appId: 'demo-app-id-for-testing',
    messagingSenderId: '123456789',
    projectId: 'demo-project-id',
    storageBucket: 'demo-project.appspot.com',
    iosClientId: 'demo-ios-client-id',
    iosBundleId: 'com.example.dimhansApp',
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'demo-api-key-for-testing',
    appId: 'demo-app-id-for-testing',
    messagingSenderId: '123456789',
    projectId: 'demo-project-id',
    storageBucket: 'demo-project.appspot.com',
  );
} 